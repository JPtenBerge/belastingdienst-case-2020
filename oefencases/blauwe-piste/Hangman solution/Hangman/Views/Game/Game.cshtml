@inject GameConfig GameConfig
@model GameModel

@section scripts {
	<script src="~/js/guess.js"></script>
}

<div id="game-container">
	@* Visual Hangman representation, thanks to https://codepen.io/jaga3421/pen/Joedvr *@
	@{
		var stateClasses = "";
		for (int i = 1; i <= Model.NrOfIncorrectGuesses; i++)
		{
			stateClasses += $" hang{i}";
		}
	}
	<div class="wrapper hangmanGame">
		<div id="hangMan">
			<div class="indicator">
				<span class="maxTry">@Model.NrOfIncorrectGuesses</span>/<span class="remaining">@GameConfig.MaxNrOfGuesses</span>
			</div>
			<div class="hangman @stateClasses">
				<div class="shaft"></div>
				<div class="pole"></div>
				<div class="rope"></div>
				<div class="base"></div>
				<div class="man">
					<div class="wrapperMan">
						<div class="face"></div>
						<div class="hands"></div>
						<div class="legs"></div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div>
		@* Show the word to guess *@
		<p id="word-to-guess">
			@* if game is over and word has not been guessed, show word *@
			@if (!Model.WordGuessed && Model.NrOfIncorrectGuesses == GameConfig.MaxNrOfGuesses)
			{
				<text>@Model.WordToGuess.Word</text>
			}
			else
			{
				foreach (var letter in Model.WordToGuess.Word)
				{
					if (letter.ToString() == " ")
					{
						<span>&nbsp;</span>
					}
					else if (!Model.GuessedLetters.Select(x => x.Letter).Contains(letter.ToString().ToUpper()))
					{
						<span>_</span>
					}
					else
					{
						<span>@letter</span>
					}
				}
			}
		</p>

		@* Show the letters *@
		@{
			var letters = new string[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K",
								 "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V",
								 "W", "X", "Y", "Z"};
		}

		<ul id="letters">
			@foreach (var letter in letters)
			{
				<li class="letter-@(letter) @(Model.GuessedLetters.Select(x => x.Letter).Contains(letter) ? "guessed" : "")">
					<a onclick="guess('@letter'); return false;">@letter</a>
				</li>
			}
		</ul>

		<p id="error-message"></p>

		<div class="box good" hidden>
			<div class="content">
				<p id="word-guessed">Je hebt het woord geraden! Goed bezig!</p>
			</div>
		</div>

		<div class="box bad" hidden>
			<div class="content">
				<p id="word-not-guessed">Helaas, volgende keer beter...</p>
			</div>
		</div>
	</div>
</div>